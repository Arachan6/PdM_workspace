/*
 * API_timer.c
 *
 *  Created on: Aug 1, 2024
 *      Author: felipe
 */


#include "stm32f4xx_hal.h"

// Timer handle declaration
TIM_HandleTypeDef htim2;

// Timer initialization function
void Timer_Init2(void) {
    __HAL_RCC_TIM2_CLK_ENABLE();

    htim2.Instance = TIM2;
    htim2.Init.Prescaler = (SystemCoreClock / 1000000) - 1; // Set prescaler for 1 MHz (1 us per count)
    htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
    htim2.Init.Period = 0xFFFFFFFF; // Max period for free running
    htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
    htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

    HAL_TIM_Base_Init(&htim2);
    HAL_TIM_Base_Start(&htim2);
}

// Delay function using timer
void delay_us(uint32_t microseconds) {
    uint32_t start = __HAL_TIM_GET_COUNTER(&htim2);
    while ((__HAL_TIM_GET_COUNTER(&htim2) - start) < microseconds);
}
