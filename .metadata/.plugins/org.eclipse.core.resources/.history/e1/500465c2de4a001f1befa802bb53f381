/*
 * API_uart.c
 *
 *  Created on: Jul 22, 2024
 *      Author: felipe
 */

#include "API_delay.h"
#include "API_uart.h"
#include "main.h"

UART_HandleTypeDef UartHandle;

bool_t uartInit(void){
	bool_t rtrn=true;
	char baudRate[10]={};
	char wordLength[10]={};
	char stopBits[10]={};
	char parityBits[10]={};

	UartHandle.Instance        = USARTx;
	UartHandle.Init.BaudRate   = 9600;
	UartHandle.Init.WordLength = UART_WORDLENGTH_8B;
	UartHandle.Init.StopBits   = UART_STOPBITS_1;
	UartHandle.Init.Parity     = UART_PARITY_NONE;
	UartHandle.Init.HwFlowCtl  = UART_HWCONTROL_NONE;
	UartHandle.Init.Mode       = UART_MODE_TX_RX;
	UartHandle.Init.OverSampling = UART_OVERSAMPLING_16;
	if (HAL_UART_Init(&UartHandle) != HAL_OK){rtrn=false;}

	// Con sprintf convierto integer a string
	// Quiero por ej baudRate = ['9','6','0','0',...]
	sprintf(baudRate, "%d", (int)UartHandle.Init.BaudRate);
	sprintf(wordLength, "%d",(int)UartHandle.Init.WordLength);
	sprintf(stopBits, "%d",(int)UartHandle.Init.StopBits);
	sprintf(parityBits, "%d",(int)UartHandle.Init.Parity);

	uartSendString((uint8_t*)"Uart Inicializada correctamente\n\r");
	uartSendString((uint8_t*)"Parametros Configurados\n\r");
	uartSendString((uint8_t*)"Baud rate: ");
	uartSendString((uint8_t*)baudRate);
	uartSendString((uint8_t*)"\n\r");
	uartSendString((uint8_t*)"Word Length: ");
	uartSendString((uint8_t*)wordLength);
	uartSendString((uint8_t*)"\n\r");
	uartSendString((uint8_t*)"Stop Bits: ");
	uartSendString((uint8_t*)stopBits);
	uartSendString((uint8_t*)"\n\r");
	uartSendString((uint8_t*)"Parity: ");
	uartSendString((uint8_t*)parityBits);
	uartSendString((uint8_t*)"\n\r");

	return rtrn;
}

void uartSendString(uint8_t * pstring){
	HAL_UART_Transmit(&UartHandle,(uint8_t*) pstring,strlen((const char*) pstring), 1000);
}

