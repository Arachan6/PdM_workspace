/*
 * API_gps.c
 *
 *  Created on: Jul 28, 2024
 *      Author: felipe
 */


#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "API_uart.h"

#define MAX_FIELDS 20
#define MAX_FIELDS_LENGTH 50

// Function to split a string by a delimiter
void splitStringManual(const char* str, char delimiter, char fields[MAX_FIELDS][MAX_FIELDS_LENGTH], int* fieldCount) {
    *fieldCount = 0;
    int length = strlen(str);
    int fieldIndex = 0;
    int charIndex = 0;

    for (int i = 0; i < length; i++) {
        if (str[i] == delimiter || str[i] == '\n') {
            fields[fieldIndex][charIndex] = '\0'; // Null-terminate current token
            fieldIndex++;
            charIndex = 0;
            if (fieldIndex >= MAX_FIELDS) break;
        } else {
            fields[fieldIndex][charIndex++] = str[i];
            if (charIndex >= MAX_FIELD_LENGTH - 1) {
                fields[fieldIndex][charIndex] = '\0'; // Null-terminate and prevent overflow
                charIndex = 0;
            }
        }
    }
    *fieldCount = fieldIndex + 1; // Account for the last field
}


Parse_NMEA_Sentence(const char* nmea){
	char fields[MAX_FIELDS][MAX_FIELD_LENGTH];
	int fieldCount = 0;
	splitStringManual(nmea, ',', fields, &fieldCount);

	if (fieldCount < 18) return; // Not enough fields

	char* sentenceType = fields[0];

	switch (sentenceType ) {
		case "$GPGSA":
			asd
			break;

		default:
			asd
	}

	char mode = fields[1][0];
	int fixType = atoi(fields[2]);
	float pdop = atof(fields[15]);
	float hdop = atof(fields[16]);
	float vdop = atof(fields[17]);
}

